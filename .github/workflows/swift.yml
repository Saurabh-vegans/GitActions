name: GithubActions Workflow

on:
  pull_request:
    branches:
      - develop
    types:
      - opened
      - synchronize
      - reopened

jobs:
  build:
    name: Unit Tests
    runs-on: macOS-latest
    strategy:
        matrix:
            destination: ['platform=iOS Simulator,OS=15.2,name=iPhone 13 Pro Max']
    steps:

      - name: Setup SSH Authentication (Swift Package Manager)
        uses: webfactory/ssh-agent@v0.4.1
        with:
            ssh-private-key: ${{ secrets.SWIFT_PACKAGE_MANAGER_DEPLOY_KEY }}

      - name: Adding Known Hosts for SSH (Swift Package Manager)
        run: for ip in $(dig @8.8.8.8 github.com +short); do ssh-keyscan github.com,$ip; ssh-keyscan $ip; done 2>/dev/null >> ~/.ssh/known_hosts

      - name: Clone Repository
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Select Xcode
        run: sudo xcode-select -switch /Applications/Xcode.app && /usr/bin/xcodebuild -version

      - uses: actions/cache@v2
        with:
          path: Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
                       ${{ runner.os }}-pods-

      - name: Pod Install
        run: |
             pod setup
             pod install #--repo-update
        shell: bash

      - name: Execute Unit Tests
        id: unitTest
        continue-on-error: true
        run: |
             xcodebuild clean build-for-testing test -scheme GithubActions -destination "${destination}"
             echo "::set-output name=result::$?"
             if [[ $? == 0 ]]; then
             echo "Success"
               else
             echo "Failed"
             fi
             #swift test --enable-test-discovery

#&& exit ${PIPESTATUS[0]}

      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"

      - name: OnSuccess
        if: steps.unitTest.outcome == 'success'
        run: exit 0


      - name: OnFailure
        if: steps.unitTest.outcome == 'failure'
        run: exit 1

     # - name: Final_success
      #  if: steps.unitTest.outputs.status == 'success' && steps.unitTest.outputs.outcome == 'success' && steps.unitTest.outputs.conclusion == 'success'
       # run: exit 0

      #- name: Final_failure
        #if: steps.unitTest.outputs.status == 'failure' && steps.unitTest.outputs.outcome == 'failure' && steps.unitTest.outputs.conclusion == 'failure'
         #run: |
            #steps.unitTest.outputs.setFailed(error: "Unit test failure")
            #exit 1

      
